BSP 알고리즘은 이진 공간 분할법으로 재귀적으로 유클리드 공간의 초평면 상의 볼록 집합으로 분할하는 기법이다.
BSP 트리 구조가 만들어진다.
BSP 알고리즘은 로그라이크에서 맵을 항상 랜덤으로 생성하는 게임일 때 많이 사용 된다.
분할 정복을 하고 난 뒤 방을 이어붙이기만 하면 되는 간단한 알고리즘이다. 

가.. 정의였는데요

음 해보니까 생각보다 쉬운거같기도 어려운거같기도..
방을 생성하고 그걸 노드로 분할한다음 이어주면 된다는 간단한 알고리즘은 맞는데
그 작업을 단순 for문으로 하려니 반복작업이 이해가 힘들었던 것 같다
for문을 제외하고 보면 그렇게 어려운 것 같지는 않았다.

알고리즘 작동 방법을 간단히 요약하면
1. 모든 방들의 기초가 되는 말단노드(방)을 만든다.
2. 그 방을 반으로 나누고 자식 객체로 정한다.
3. 그 자식 객체를 반으로 나누고~~ 작업을 반복하며 리스트에 저장해둔다.
4. 모든 방이 나눠지면, 리스트에 저장해둔 방을 사용하여 길을 이어준다.
4-1. 이 때 길을 이어주기 위해 부모가 필요한데 그 객체는 자식 객체의 클래스에 저장해준다.
4-2. 길을 이어주며 노드와 노드의 길 사이에 역방향으로 길을 이어줄 수 도 있다.
5. 길을 모두 이으면, 말단 방의 테두리를 벽으로 정하고 끝낸다.
6. 마지막으로 타일맵이나 그래픽요소를 할당해주어 출력한다.
6-1. 타일맵을 주로 사용하며, 그 이유는 콜라이더의 유무를 보다 쉽게 컨트롤 할 수 있기 때문이다. ex) wall = col & road = !col

https://blog.naver.com/PostView.nhn?blogId=jh20s&logNo=222343029141&redirect=Dlog&widgetTypeCall=true&directAccess=false
https://blog.naver.com/6459132/222248341720